import { Observable } from 'rxjs/Observable';
import { ScrollToConfig } from './models/scroll-to-config.model';
export declare class ScrollToService {
    private _document;
    private _platform_id;
    private _animation;
    constructor(_document: any, _platform_id: any);
    /**
     * Target an Element to scroll to.
     *
     * @todo type 'any' in Observable should become custom type like 'ScrollToEvent' (base class), see issue comment:
     * 	- https://github.com/nicky-lenaers/ngx-scroll-to/issues/10#issuecomment-317198481
     *
     * @param event 				Native Browser Event
     * @param config 				Configuration Object
     * @returns 					Observable
     */
    scrollTo(event: Event, config: ScrollToConfig): Observable<any>;
    /**
     * Start a new Animation.
     *
     * @todo Emit proper events from subscription
     *
     * @param event 				Native Browser Event
     * @param config 				Configuration Object
     * @returns 					Observable
     */
    private _start(event, config);
    /**
     * Add listeners for the Animation Stop Event.
     *
     * @param events 					List of events to listen to
     * @param listenerTarget 			Target to attach the listener on
     * @param handler 					Handler for when the listener fires
     * @returns void
     */
    private _addStopEventListeners(events, listenerTarget, handler);
    /**
     * Remove listeners for the Animation Stop Event.
     *
     * @param events 					List of events to listen to
     * @param listenerTarget 			Target to attach the listener on
     * @param handler 					Handler for when the listener fires
     * @returns void
     */
    private _removeStopEventListeners(events, listenerTarget, handler);
    /**
     * Find the first scrollable parent node of an element.
     *
     * @param nativeElement 			The element to search from
     * @return 							The first scrollable parent element
     */
    private _getFirstScrollableParent(nativeElement);
    /**
     * Get the Target Node to scroll to.
     *
     * @param id 			The given ID of the node, either a string or an element reference
     * @returns 			Target Node
     */
    private _getTargetNode(id);
    /**
     * Retrieve the Listener target.
     *
     * @param container 				The HTML Container element
     * @returns 						Listener
     */
    private _getListenerTarget(container);
}
