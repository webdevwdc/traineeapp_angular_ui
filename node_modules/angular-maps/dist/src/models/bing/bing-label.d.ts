import { MapLabel } from '../map-label';
/**
 * Implements map a labled to be placed on the map.
 *
 * @export
 * @extends Microsoft.Maps.CustomOverlay
 * @extends MapLabel
 * @class BingMapLabel
 */
export declare class BingMapLabel extends MapLabel {
    /**
     * Creates a new MapLabel
     * @extends Microsoft.Maps.CustomOverlay
     * @extends MapLabel
     * @param {{ [key: string]: any }} opt_options Optional properties to set.
     * @constructor
     * @public
     */
    constructor(options: {
        [key: string]: any;
    });
    /**
     * Gets the value of a setting.
     *
     * @param {string} key - Key specifying the setting.
     * @returns {*} - The value of the setting.
     * @memberof BingMapLabel
     * @public
     * @method
     */
    Get(key: string): any;
    /**
     * Gets the map associted with the label.
     *
     * @returns {Microsoft.Maps.Map}
     * @memberof BingMapLabel
     * @method
     * @public
     */
    GetMap(): Microsoft.Maps.Map;
    /**
     * Set the value for a setting.
     *
     * @param {string} key - Key specifying the setting.
     * @param {*} val - The value to set.
     * @memberof BingMapLabel
     * @public
     * @method
     */
    Set(key: string, val: any): void;
    /**
     * Sets the map for the label. Settings this to null remove the label from hte map.
     *
     * @param {Microsoft.Maps.Map} map - Map to associated with the label.
     * @memberof BingMapLabel
     * @method
     * @public
     */
    SetMap(map: Microsoft.Maps.Map): void;
    /**
     * Applies settings to the object
     *
     * @param {{ [key: string]: any }} options - An object containing the settings key value pairs.
     * @memberof BingMapLabel
     * @public
     * @method
     */
    SetValues(options: {
        [key: string]: any;
    }): void;
    /**
     * Draws the label on the map.
     * @memberof BingMapLabel
     * @method
     * @protected
     */
    protected Draw(): void;
    /**
     * Delegate called when the label is added to the map. Generates and configures
     * the canvas.
     *
     * @memberof BingMapLabel
     * @method
     * @protected
     */
    protected OnAdd(): void;
    /**
     * Delegate callled when the label is loaded
     * @memberof BingMapLabel
     * @method
     * @private
     */
    private OnLoad();
}
/**
 * Helper function to extend the CustomOverlay into the MapLabel
 *
 * @export
 * @method
 */
export declare function ExtendMapLabelWithOverlayView(): void;
