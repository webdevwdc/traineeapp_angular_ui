"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var mapapiloader_1 = require("./../mapapiloader");
var bing_map_api_loader_service_1 = require("./bing-map.api-loader.service");
var bing_infobox_service_1 = require("./bing-infobox.service");
var bing_marker_service_1 = require("./bing-marker.service");
var bing_map_service_1 = require("./bing-map.service");
var bing_layer_service_1 = require("./bing-layer.service");
var bing_cluster_service_1 = require("./bing-cluster.service");
var bing_polygon_service_1 = require("./bing-polygon.service");
var bing_polyline_service_1 = require("./bing-polyline.service");
/**
 * Implements a factory to create thre necessary Bing Maps V8 specific service instances.
 *
 * @export
 * @class BingMapServiceFactory
 * @implements {MapServiceFactory}
 */
var BingMapServiceFactory = (function () {
    ///
    /// Constructor
    ///
    /**
     * Creates an instance of BingMapServiceFactory.
     * @param {MapAPILoader} _loader - {@link MapAPILoader} implementation for the Bing Map V8 provider.
     * @param {NgZone} _zone - NgZone object to implement zone aware promises.
     *
     * @memberof BingMapServiceFactory
     */
    function BingMapServiceFactory(_loader, _zone) {
        this._loader = _loader;
        this._zone = _zone;
    }
    ///
    /// Public methods and MapServiceFactory implementation.
    ///
    /**
     * Creates the map service for the Bing Maps V8 implementation.
     *
     * @returns {MapService} - {@link MapService}. A concreted instance of the {@link BingMapService}.
     *
     * @memberof BingMapServiceFactory
     */
    BingMapServiceFactory.prototype.Create = function () {
        return new bing_map_service_1.BingMapService(this._loader, this._zone);
    };
    /**
     * Creates the cluster service for the Bing Maps V8 implementation.
     *
     * @param {MapService} map - {@link MapService}. A concreted instance of the {@link BingMapService}.
     * @returns {ClusterService} - {@link ClusterService}. A concreted instance of the {@link BingClusterService}.
     *
     * @memberof BingMapServiceFactory
     */
    BingMapServiceFactory.prototype.CreateClusterService = function (_mapService) {
        return new bing_cluster_service_1.BingClusterService(_mapService, this._zone);
    };
    /**
     * Creates thh info box service for the Bing Maps V8 implementation.
     *
     * @param {MapService} map - {@link MapService}. A concreted instance of the {@link BingMapService}.
     * @returns {InfoBoxService} - {@link InfoBoxService}. A concreted instance of the {@link BingInfoBoxService}.
     *
     * @memberof BingMapServiceFactory
     */
    BingMapServiceFactory.prototype.CreateInfoBoxService = function (_mapService) {
        return new bing_infobox_service_1.BingInfoBoxService(_mapService, this._zone);
    };
    /**
     * Creates the layer service for the Bing Maps V8 implementation.
     *
     * @param {MapService} map - {@link MapService}. A concreted instance of the {@link BingMapService}.
     * @returns {LayerService} - {@link LayerService}. A concreted instance of the {@link BingLayerService}.
     *
     * @memberof BingMapServiceFactory
     */
    BingMapServiceFactory.prototype.CreateLayerService = function (_mapService) {
        return new bing_layer_service_1.BingLayerService(_mapService, this._zone);
    };
    /**
     * Creates the marker service for the Bing Maps V8 implementation.
     *
     * @param {MapService} map - {@link MapService}. A concreted instance of the {@link BingMapService}.
     * @param {LayerService} layers - {@link LayerService}. A concreted instance of the {@link BingLayerService}.
     * @param {ClusterService} clusters  - {@link ClusterService}. A concreted instance of the {@link BingClusterService}.
     * @returns {MarkerService} - {@link MarkerService}. A concreted instance of the {@link BingMarkerService}.
     *
     * @memberof BingMapServiceFactory
     */
    BingMapServiceFactory.prototype.CreateMarkerService = function (_mapService, _layerService, _clusterService) {
        return new bing_marker_service_1.BingMarkerService(_mapService, _layerService, _clusterService, this._zone);
    };
    /**
     * Creates the polygon service for the Bing Maps V8 implementation.
     *
     * @param {MapService} map - {@link MapService} implementation for thh underlying map archticture.
     * @param {LayerService} layers - {@link LayerService} implementation for the underlying map architecture.
     * @returns {PolygonService} - {@link PolygonService} implementation for the underlying map architecture.
     *
     * @memberof MapServiceFactory
     */
    BingMapServiceFactory.prototype.CreatePolygonService = function (map, layers) {
        return new bing_polygon_service_1.BingPolygonService(map, layers, this._zone);
    };
    /**
     * Creates the polyline service for the Bing Maps V8 implementation.
     *
     * @param {MapService} map - {@link MapService} implementation for thh underlying map archticture.
     * @param {LayerService} layers - {@link LayerService} implementation for the underlying map architecture.
     * @returns {PolylineService} - {@link PolylineService} implementation for the underlying map architecture.
     *
     * @memberof MapServiceFactory
     */
    BingMapServiceFactory.prototype.CreatePolylineService = function (map, layers) {
        return new bing_polyline_service_1.BingPolylineService(map, layers, this._zone);
    };
    return BingMapServiceFactory;
}());
BingMapServiceFactory.decorators = [
    { type: core_1.Injectable },
];
/** @nocollapse */
BingMapServiceFactory.ctorParameters = function () { return [
    { type: mapapiloader_1.MapAPILoader, },
    { type: core_1.NgZone, },
]; };
exports.BingMapServiceFactory = BingMapServiceFactory;
/**
 * Creates a new instance of a plaform specific MapServiceFactory.
 *
 * @export
 * @param apiLoader - An {@link MapAPILoader} instance. This is expected to the a {@link BingMapAPILoader}.
 * @param zone - An NgZone instance to provide zone aware promises.
 *
 * @return {MapServiceFactory} -  A {@link MapServiceFactory} instance.
 */
function BingMapServiceFactoryFactory(apiLoader, zone) {
    return new BingMapServiceFactory(apiLoader, zone);
}
exports.BingMapServiceFactoryFactory = BingMapServiceFactoryFactory;
/**
 * Creates a new instance of a plaform specific MapLoaderFactory.
 *
 * @export
 * @returns {MapAPILoader} - A {@link MapAPILoader} instance.
 */
function BingMapLoaderFactory() {
    return new bing_map_api_loader_service_1.BingMapAPILoader(new bing_map_api_loader_service_1.BingMapAPILoaderConfig(), new mapapiloader_1.WindowRef(), new mapapiloader_1.DocumentRef());
}
exports.BingMapLoaderFactory = BingMapLoaderFactory;
//# sourceMappingURL=bing-map.service.factory.js.map