import { IInfoWindowOptions } from './../../interfaces/iinfo-window-options';
import { IBox } from './../../interfaces/ibox';
import { IMapOptions } from '../../interfaces/imap-options';
import { IMarkerOptions } from '../../interfaces/imarker-options';
import { IPolygonOptions } from '../../interfaces/ipolygon-options';
import { IPolylineOptions } from '../../interfaces/ipolyline-options';
import { ILatLong } from '../../interfaces/ilatlong';
import * as GoogleMapTypes from './google-map-types';
import { MapTypeId } from '../../models/map-type-id';
/**
 * This class contains helperfunctions to map various interfaces used to represent options and structures into the
 * corresponding Google Maps specific implementations.
 *
 * @export
 * @class GoogleConversions
 */
export declare class GoogleConversions {
    /**
     * Map option attributes that are supported for conversion to Google Map properties
     *
     * @type string[]
     * @memberof GoogleConversions
     * @private
     * @static
     */
    private static _mapOptionsAttributes;
    /**
     * InfoWindow option attributes that are supported for conversion to Google Map properties
     *
     * @type string[]
     * @memberof GoogleConversions
     * @private
     * @static
     */
    private static _infoWindowOptionsAttributes;
    /**
     * Marker option attributes that are supported for conversion to Google Map properties
     *
     * @type string[]
     * @memberof GoogleConversions
     * @private
     * @static
     */
    private static _markerOptionsAttributes;
    /**
     * Cluster option attributes that are supported for conversion to Google Map properties
     *
     * @type string[]
     * @memberof GoogleConversions
     * @private
     * @static
     */
    private static _clusterOptionsAttributes;
    /**
     * Polygon option attributes that are supported for conversion to Google Map properties
     *
     * @type string[]
     * @memberof GoogleConversions
     * @private
     * @static
     */
    private static _polygonOptionsAttributes;
    /**
     * Polyline option attributes that are supported for conversion to Google Map properties
     *
     * @type string[]
     * @memberof GoogleConversions
     * @private
     * @static
     */
    private static _polylineOptionsAttributes;
    /**
     * Maps an IBox object to a GoogleMapTypes.LatLngBoundsLiteral object.
     *
     * @static
     * @param {IBox} box - Object to be mapped.
     * @returns {GoogleMapTypes.LatLngBoundsLiteral} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateBounds(bounds: IBox): GoogleMapTypes.LatLngBoundsLiteral;
    /**
     * Maps an IInfoWindowOptions object to a GoogleMapTypes.InfoWindowOptions object.
     *
     * @static
     * @param {IInfoWindowOptions} options - Object to be mapped.
     * @returns {GoogleMapTypes.InfoWindowOptions} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateInfoWindowOptions(options: IInfoWindowOptions): GoogleMapTypes.InfoWindowOptions;
    /**
     * Maps an ILatLong object to a GoogleMapTypes.LatLngLiteral object.
     *
     * @static
     * @param {ILatLong} latlong - Object to be mapped.
     * @returns {GoogleMapTypes.LatLngLiteral} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateLocation(latlong: ILatLong): GoogleMapTypes.LatLngLiteral;
    /**
     * Maps an GoogleMapTypes.LatLngLiteral object to a ILatLong object.
     *
     * @static
     * @param {GoogleMapTypes.LatLngLiteral} latlong - Object to be mapped.
     * @returns {ILatLong} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateLatLng(latlng: GoogleMapTypes.LatLngLiteral): ILatLong;
    /**
     * Maps an ILatLong object to a GoogleMapTypes.LatLng object.
     *
     * @static
     * @param {ILatLong} latlong - Object to be mapped.
     * @returns {GoogleMapTypes.LatLng} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateLocationObject(latlong: ILatLong): GoogleMapTypes.LatLng;
    /**
     * Maps an GoogleMapTypes.LatLng object to a ILatLong object.
     *
     * @static
     * @param {GoogleMapTypes.LatLng} latlong - Object to be mapped.
     * @returns {ILatLong} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateLatLngObject(latlng: GoogleMapTypes.LatLng): ILatLong;
    /**
     * Maps an ILatLong array to a array of GoogleMapTypes.LatLng object.
     *
     * @static
     * @param {Array<ILatLong>} latlongArray - Object to be mapped.
     * @returns {Array<GoogleMapTypes.LatLng>} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateLocationObjectArray(latlongArray: Array<ILatLong>): Array<GoogleMapTypes.LatLng>;
    /**
     * Maps a MapTypeId object to a Google maptype string.
     *
     * @static
     * @param {MapTypeId} mapTypeId - Object to be mapped.
     * @returns {string} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateMapTypeId(mapTypeId: MapTypeId): string;
    /**
     * Maps an IMarkerOptions object to a GoogleMapTypes.MarkerOptions object.
     *
     * @static
     * @param {IMarkerOptions} options - Object to be mapped.
     * @returns {GoogleMapTypes.MarkerOptions} - Promise that when resolved contains the mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateMarkerOptions(options: IMarkerOptions): GoogleMapTypes.MarkerOptions;
    /**
     * Maps an IMapOptions object to a GoogleMapTypes.MapOptions object.
     *
     * @static
     * @param {IMapOptions} options - Object to be mapped.
     * @returns {GoogleMapTypes.MapOptions} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslateOptions(options: IMapOptions): GoogleMapTypes.MapOptions;
    /**
     * Translates an array of locations or an array or arrays of location to and array of arrays of Bing Map Locations
     *
     * @static
     * @param {(Array<ILatLong> | Array<Array<ILatLong>>)} paths - ILatLong based locations to convert.
     * @returns {Array<Array<GoogleMapTypes.LatLng>>} - converted locations.
     *
     * @memberof GoogleConversions
     */
    static TranslatePaths(paths: Array<ILatLong> | Array<Array<ILatLong>>): Array<Array<GoogleMapTypes.LatLng>>;
    /**
     *  Maps an IPolygonOptions object to a GoogleMapTypes.PolygonOptions.
     *
     * @static
     * @param {IPolygonOptions} options - Object to be mapped.
     * @returns {GoogleMapTypes.PolygonOptions} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslatePolygonOptions(options: IPolygonOptions): GoogleMapTypes.PolygonOptions;
    /**
     *  Maps an IPolylineOptions object to a GoogleMapTypes.PolylineOptions.
     *
     * @static
     * @param {IPolylineOptions} options - Object to be mapped.
     * @returns {GoogleMapTypes.PolylineOptions} - Mapped object.
     *
     * @memberof GoogleConversions
     */
    static TranslatePolylineOptions(options: IPolylineOptions): GoogleMapTypes.PolylineOptions;
}
