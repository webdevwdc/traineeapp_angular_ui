import { OnInit, OnChanges, EventEmitter, Injector, ApplicationRef, ElementRef, ViewContainerRef, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';
import { ColorPickerService } from './color-picker.service';
export declare class ColorPickerDirective implements OnInit, OnChanges {
    private appRef;
    private vcRef;
    private el;
    private injector;
    private service;
    private cfr;
    private cdr;
    colorPicker: string;
    colorPickerSelect: EventEmitter<string>;
    colorPickerChange: EventEmitter<string>;
    cpToggle: boolean;
    cpInputChange: EventEmitter<any>;
    cpSliderChange: EventEmitter<any>;
    cpToggleChange: EventEmitter<boolean>;
    cpPosition: string;
    cpPositionOffset: string;
    cpPositionRelativeToArrow: boolean;
    cpOutputFormat: string;
    cpPresetLabel: string;
    cpPresetColors: Array<string>;
    cpCancelButton: boolean;
    cpCancelButtonClass: string;
    cpCancelButtonText: string;
    cpOKButton: boolean;
    cpOKButtonClass: string;
    cpOKButtonText: string;
    cpFallbackColor: string;
    cpHeight: string;
    cpWidth: string;
    cpIgnoredElements: any;
    cpDialogDisplay: string;
    cpSaveClickOutside: boolean;
    cpAlphaChannel: string;
    cpUseRootViewContainer: boolean;
    private dialog;
    private created;
    private ignoreChanges;
    constructor(appRef: ApplicationRef, vcRef: ViewContainerRef, el: ElementRef, injector: Injector, service: ColorPickerService, cfr: ComponentFactoryResolver, cdr: ChangeDetectorRef);
    ngOnChanges(changes: any): void;
    ngOnInit(): void;
    onClick(): void;
    openDialog(): void;
    colorChanged(value: string, ignore?: boolean): void;
    colorSelected(value: string): void;
    inputChanged(event: any): void;
    sliderChanged(event: any): void;
    changeInput(value: string): void;
    toggle(value: boolean): void;
}
